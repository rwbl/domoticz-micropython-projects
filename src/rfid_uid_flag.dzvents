-- rfid.dzvents
-- Handle the rfid text device state change triggered by the PicoW webserver submitting HTTP API/JSOM requests.
-- 20230320 rwbl
--[[
Domoticz Log
2023-03-20 10:41:49.155 Status: dzVents: Info: Handling events for: "RFID UID", value: "879739599"
2023-03-20 10:41:49.155 Status: dzVents: Info: LOG_PICOW_RFID: ------ Start internal script: picow_rfid: Device: "RFID UID (VirtualSensors)", Index: 27
2023-03-20 10:41:49.155 Status: dzVents: Info: LOG_PICOW_RFID: Device RFID UID: statechange=879739599
2023-03-20 10:41:49.155 Status: dzVents: Info: LOG_PICOW_RFID: Card UID 879739599 is VALID.
2023-03-20 10:41:49.156 Status: dzVents: Info: LOG_PICOW_RFID: ------ Finished picow_rfid
2023-03-20 10:41:49.156 Status: EventSystem: Script event triggered: /home/pi/domoticz/dzVents/runtime/dzVents.lua
2023-03-20 10:41:49.204 Status: [web:8080] Incoming connection from: ::1
2023-03-20 10:41:49.246 Status: dzVents: Info: Handling events for: "RFID UID", value: "879739599,VALID"
2023-03-20 10:41:49.246 Status: dzVents: Info: LOG_PICOW_RFID: ------ Start internal script: picow_rfid: Device: "RFID UID (VirtualSensors)", Index: 27
2023-03-20 10:41:49.246 Status: dzVents: Info: LOG_PICOW_RFID: Device RFID UID: statechange=879739599,VALID
2023-03-20 10:41:49.246 Status: dzVents: Info: LOG_PICOW_RFID: ------ Finished picow_rfid
2023-03-20 10:42:01.345 Status: dzVents: Info: Handling events for: "RFID UID", value: "8797395990"
2023-03-20 10:42:01.345 Status: dzVents: Info: LOG_PICOW_RFID: ------ Start internal script: picow_rfid: Device: "RFID UID (VirtualSensors)", Index: 27
2023-03-20 10:42:01.345 Status: dzVents: Info: LOG_PICOW_RFID: Device RFID UID: statechange=8797395990
2023-03-20 10:42:01.345 Status: dzVents: Info: LOG_PICOW_RFID: Card UID 8797395990 is NOT VALID.
2023-03-20 10:42:01.345 Status: dzVents: Info: LOG_PICOW_RFID: ------ Finished picow_rfid
2023-03-20 10:42:01.346 Status: EventSystem: Script event triggered: /home/pi/domoticz/dzVents/runtime/dzVents.lua
2023-03-20 10:42:01.430 Status: dzVents: Info: Handling events for: "RFID UID", value: "8797395990,NOT VALID"
2023-03-20 10:42:01.431 Status: dzVents: Info: LOG_PICOW_RFID: ------ Start internal script: picow_rfid: Device: "RFID UID (VirtualSensors)", Index: 27
2023-03-20 10:42:01.431 Status: dzVents: Info: LOG_PICOW_RFID: Device RFID UID: statechange=8797395990,NOT VALID
2023-03-20 10:42:01.431 Status: dzVents: Info: LOG_PICOW_RFID: ------ Finished picow_rfid 
]]--
-- Domoticz IDX of the text device state is set by the PicoW webserver
local IDX_DEVICE  = 27
-- Card UID to verify
local UID_CARD_A = '879739599'
local FLAG_VALID = 'VALID'
local FLAG_NOT_VALID = 'NOT VALID'
-- Log marker
local LOG_MARKER = "LOG_PICOW_RFID"
-- Add a flag VALID or NOT VALID to the device state.
-- If the uid of the device is not changed, no new log entry is set.
-- Note the use of openurl with http api/json get request.
-- This updates the text of the device immediate, whereas dzvents updateText needs more time.
local function UpdateDevice(domoticz, device, state)
    -- Define the new svalue with uid,state
    local svalue = string.format('%s,%s', device.text, state)
    -- Define the url for the http api/json get request
    local url = string.format('http://localhost:8080/json.htm?type=command&param=udevice&idx=%d&nvalue=0&svalue=%s', device.idx, svalue)
    -- Replace space by %20 in the url
    url = string.gsub(url, ' ', '%%20')
    -- Submit the http get request
    domoticz.openURL(url)
    -- Optional return the new device svalue
    return svalue
end
-- Handle two device state changes:
-- First state change triggered by the PicoW webserver with the card UID only.
-- Second state change by this event after adding the flag to the UID to add as device log entry uid,flag.
-- If the card UID only is used, no new device log entry is added.
-- By using a flag Domoticz notices a text change and adds a log entry.
return {
	on = { 
	    devices = { IDX_DEVICE } 
	},
	logging = { 
	    level = domoticz.LOG_INFO, marker = LOG_MARKER 
    },
	execute = function(domoticz, device)
		domoticz.log(string.format('Device %s: statechange=%s', device.name, device.state), domoticz.LOG_INFO)
		-- Check if the device state contains the flag uid,flag
		if string.find(device.state, ",") == nil then
		    -- Get the UID
    		uid = device.state
            -- Check the uid for any action
    		if uid == UID_CARD_A then
    		    domoticz.log(string.format('Card UID %d is %s.', uid, FLAG_VALID))
    		    UpdateDevice(domoticz, device, FLAG_VALID)
    		    -- Trigger any action ...
            else
    		    domoticz.log(string.format('Card UID %s is %s.', uid, FLAG_NOT_VALID))
    		    UpdateDevice(domoticz, device, FLAG_NOT_VALID)
    		end
        end
	end
}
